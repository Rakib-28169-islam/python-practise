from collections import Counter
def is_prime(n):
    if n < 2:
       return False
       
    for i in range(2,int(n**0.5)+1):
        if n % i == 0:
           return False
           
    return True
    
def partition_even_odd(nums):
    evens = [x for x in nums if x % 2 == 0]
    odds = [x for x in nums if x % 2 != 0]
    return [evens, odds]    

products = [{"name": "Laptop", "price": 800}, {"name": "Phone", "price": 500}, {"name": "Tablet", "price": 300}]

budgetProducts = [product for product in products if product['price']<=500]


nums = [1, 2, 2, 3, 3, 3, 4]
freq = Counter(nums)


from collections import Counter

def find_odd_occurrences(nums):
    return [key for key, count in Counter(nums).items() if count % 2 != 0]

nums = [1, 2, 3, 2, 3, 3, 4]
print(find_odd_occurrences(nums))  # Output: [1, 3, 4]




nums = [1, 2, 3, 4, 5, 6]
print(partition_even_odd(nums))  # Output: ([2, 4, 6], [1, 3, 5])




    
words = ["apple", "banana", "apple", "cherry", "banana", "apple"]
fruitsCount = {word:words.count(word) for word in set(words)}
    
files = ["report.txt", "data.csv", "summary.txt", "image.png"]
txt_files =[file for file in files if file.endswith('.txt')]


words = ["level", "world", "radar", "python", "civic"]
palindromes =[x for x in words if x==x[::-1]]
   
nested = [[1, 2, 3], [4, 5], [6, 7, 8]]
result = [x for subList in nested for x in subList]
   
primes = [x for x in range(10,20000) if is_prime(x)]
 

print(dict(freq))
print(budgetProducts)
print(fruitsCount)  
print(txt_files)  
print(palindromes)   
print(result)   
print(primes)



OUTPUT
[1, 3, 4]
[[2, 4, 6], [1, 3, 5]]
{1: 1, 2: 2, 3: 3, 4: 1}
[{'name': 'Phone', 'price': 500}, {'name': 'Tablet', 'price': 300}]
{'cherry': 1, 'banana': 2, 'apple': 3}
['report.txt', 'summary.txt']
['level', 'radar', 'civic']
[1, 2, 3, 4, 5, 6, 7, 8]
prime numbers as well
